{"version":3,"sources":["../../lib/models/mongoose-collection.js"],"names":[],"mappings":"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","file":"mongoose-collection.js","sourcesContent":["'use strict'\n\nvar Joi = require('joi')\nvar uuid = require('node-uuid')\nvar v = require('validator')\nvar Promise = require('bluebird')\nvar prettyJson = require('../util/prettyPrint.js')\nvar mongoose = require('mongoose')\nvar joigoose = require('joigoose')(mongoose)\nvar logger = require('../util/log.js')(module)\nvar flatten = require('flat')\n\nclass MongooseCollection {\n  constructor (schema) {\n    this.schema = schema // a joi schema\n    this.mongooseSchema = joigoose.convert(this.schema)\n    this.collectionName = this.modelName(this.constructor.name)\n    this.model = mongoose.model(`${this.constructor.name}`, this.mongooseSchema)\n  }\n\n  save (item) {\n    if (!(v.isUUID(item.id))) {\n      item.id = uuid.v1() // date time based ids\n    }\n\n    var validation = this.validate(item, this.schema.optionalKeys('id'))\n\n    if (!validation.error) {\n      var self = this\n      return new Promise(function (resolve, reject) {\n        self.model.collection.insert(item, function (err, reply) {\n          if (err) {\n            let errorMsg = `${self.constructor.name}.save() item failed to save`\n            return reject({\n              message: errorMsg,\n              details: err\n            })\n          }\n          return resolve(item.id)\n        })\n      })\n    } else {\n      let errorMsg = `${self.constructor.name}.save() item failed to validate`\n      return Promise.reject({\n        message: errorMsg,\n        details: validation.error\n      })\n    }\n  }\n\n  update (id, item) {\n    var validation = this.validate(item)\n    let errorMsg = `${this.constructor.name}.save() item failed to update: ${prettyJson(item)}`\n    if (validation.error) {\n      return Promise.reject({\n        message: errorMsg,\n        details: validation.error\n      })\n    }\n    var self = this\n    return self.model.findOne({'id': id}).lean().then(function (res) {\n      Object.assign(res, item)\n      delete res._id\n      return self.model.update({'id': id}, res).lean().then(function (raw) {\n        return Promise.resolve(res.id)\n      }).then(null, function (err) {\n        return Promise.reject({\n          message: errorMsg,\n          details: err\n        })\n      })\n    }).then(null, function (err) {\n      return Promise.reject({\n        message: errorMsg,\n        details: err\n      })\n    })\n  }\n\n  updateDiff (id, diffObject) {\n    this.model.collection.update({id: id}, {\n      $set: flatten(diffObject)\n    })\n  }\n\n  findOneById (id) {\n    return this.findOneByQuery({'id': id})\n  }\n\n  findOneByQuery (query) {\n    let errorMsg = `${this.constructor.name}.findOneByQuery() item not found for: ${query}`\n    return this.model.findOne(query).lean().then(function (res) {\n      if (res) {\n        return Promise.resolve(res)\n      }\n    }).then(null, function (err) {\n      return Promise.reject({\n        message: errorMsg,\n        detail: err\n      })\n    })\n  }\n\n  findById (id) {\n    return this.findByQuery({'id': id})\n  }\n\n  findByQuery (query) {\n    let errorMsg = `${this.constructor.name}.findByQuery() items not found for: ${query}`\n    return this.model.find(query).lean().then(function (res) {\n      if (res) {\n        return Promise.resolve(res)\n      }\n    }).then(null, function (err) {\n      return Promise.reject({\n        message: errorMsg,\n        detail: err\n      })\n    })\n  }\n\n  remove (item) {\n    this.model.remove({'id': item.id}).exec()\n    return Promise.resolve()\n  }\n\n  purge () {\n    mongoose.connection.collections[this.collectionName].drop()\n  }\n\n  validate (item, optionalSchema) {\n    var validateOptions = {\n      allowUnknown: true\n    }\n    var validation\n\n    if (optionalSchema) {\n      validation = Joi.validate(item, optionalSchema, validateOptions)\n    } else {\n      validation = Joi.validate(item, this.schema, validateOptions)\n    }\n\n    if (validation.error) logger.debug(validation.error)\n\n    return validation\n  }\n\n  modelName (name) {\n    return name.toLowerCase() + 's'\n  }\n}\n\nmodule.exports = MongooseCollection\n"]}