{"version":3,"sources":["../../lib/routes/drones.js"],"names":[],"mappings":"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","file":"drones.js","sourcesContent":["import config from 'config'\nimport web from 'hapi-decorators'\nimport Bluebird from 'bluebird'\nimport Drone from '../models/drone'\nimport uuid from 'node-uuid'\nimport _JWT from 'jsonwebtoken'\n\nconst JWT = Bluebird.promisifyAll(_JWT)\n\n@web.controller(`${config.apiPrefix}drones`)\nexport default class Drones {\n  /*\n   * Returns all drones\n   */\n  @web.get('/')\n  async all (request, reply) {\n    try {\n      let list = await Drone.findByQuery({})\n      let returnList = clone(list)\n\n      returnList.slice().map((item) => {\n        if (item.session) delete item.session // filter out session before replying\n      })\n\n      reply(returnList)\n    } catch (err) {\n      reply(err).code(503)\n    }\n  }\n\n  /*\n   * Saves a drone and replies a token\n   */\n  @web.post('/')\n  async create (request, reply) {\n    let payload = request.payload\n\n    if (!payload.name) return reply('malformed request').code(400)\n\n    let id = await Drone.save(payload)\n    let list = await Drone.findByQuery({'id': id})\n\n    if (!list.length) return reply('').code(503)\n\n    let drone = list[0]\n    let session = generateSession(id)\n    let token = await JWT.sign(session, config.jwtSecret)\n\n    drone.session = session\n    drone.token = token\n\n    await Drone.update(drone.id, drone)\n    reply(drone)\n  }\n\n  /*\n   * Return a single drone by id\n   */\n  @web.get('/{id}')\n  async single (request, reply) {\n    let drone = await Drone.findOneById(request.params.id)\n    reply(drone)\n  }\n\n  /*\n   * Refresh session and token information for a drone\n   */\n  @web.get('/session/refresh')\n  async login (request, reply) {\n    let id = request.auth.credentials.parent\n    let list = await Drone.findByQuery({'id': id})\n\n    if (!list.length) return reply('').code(503)\n\n    let drone = list[0]\n    let session = generateSession(id)\n    let token = await JWT.sign(session, config.jwtSecret)\n\n    drone.session = session\n\n    await Drone.update(drone.id, drone)\n\n    reply({text: 'Check auth headers for your token'})\n      .header('Authorization', token)\n  }\n\n  @web.post('/checkin/{token}')\n  async checkIn (request, reply) {\n    var token = request.params.token\n\n    if (token) {\n      let decoded\n\n      try {\n        decoded = await JWT.verify(token, config.jwtSecret)\n      } catch (err) {\n        return reply(err).code(401)\n      }\n\n      await Drone.update(decoded.parent, { status: 'active' })\n      reply()\n    } else {\n      reply('missing token').code(400)\n    }\n  }\n}\n\nfunction generateSession (id) {\n  return {\n    parent: id,\n    id: uuid.v1(),\n    type: 'drone',\n    valid: true,\n    exp: new Date().getTime() + 5 * 365 * 24 * 60 * 60 * 1000 // expires in 5 years\n  }\n}\n\nfunction clone (obj) {\n  return JSON.parse(JSON.stringify(obj))\n}\n"]}