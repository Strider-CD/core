{"version":3,"sources":["../../lib/event-handlers/jobs.js"],"names":[],"mappings":"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","file":"jobs.js","sourcesContent":["'use strict'\n\nvar logger = require('../util/log.js')(module)\nvar validator = require('validator')\nvar lodash = require('lodash')\nvar Job = require('../models/job')\nvar config = require('config')\n\nmodule.exports = function (emitter, client) {\n  emitter.on('jobs.find', find)\n  emitter.on('jobs.job.update', jobUpdate)\n  emitter.on('jobs.job.stop', jobStop)\n  emitter.on('jobs.frontend.getByQuery', frontendGetByQuery)\n  emitter.on('jobs.queue.get', queueGet)\n  emitter.on('jobs.queue.getWithFilter', queueGet)\n  emitter.on('jobs.queue.insert', queueInsert)\n\n  function find (query, cb) {\n    var jobQuery = query || {}\n    Job.findByQuery(jobQuery).then(function (list) {\n      cb(undefined, list)\n    }).then(null, function (err) {\n      cb(err)\n    })\n  }\n\n  function jobUpdate (job, cb) {\n    Job.findOneByQuery({id: job.id}).then(function (foundJob) {\n      Object.assign(foundJob, job)\n      foundJob.updatedAt = new Date().getTime()\n      // updateParentJob(foundJob)\n      Job.update(foundJob.id, foundJob).then(function (id) {\n        updateParentJob(foundJob)\n        notifyClients(job, client)\n        cb(undefined, id)\n        return\n      }).then(null, function (err) {\n        console.error('jobUpdate update err', err)\n        cb(err)\n        return\n      })\n    }).then(null, function (err) {\n      console.error('jobUpdate findOneByQuery err', err)\n      cb(err)\n      return\n    })\n  }\n\n  function jobStop (job, cb) {\n    job.status = 'aborted'\n    job.updatedAt = new Date().getTime()\n    updateParentJob(job)\n    Job.save(job).then(function (id) {\n      cb(null, id)\n    }).then(null, function (err) {\n      cb(err, {})\n    })\n  }\n\n  function frontendGetByQuery (query, cb) {\n    var jobQuery = query || {}\n    Job.findByQuery(jobQuery).then(function (jobList) {\n      if (jobList.length > 0) return cb(null, jobList)\n      else return cb(null, [])\n      /*\n      if (jobList.length === 1) {\n        if (!(jobList[0].hasChildren)) {\n          return cb(null, jobList)\n        }\n      }\n      */\n      /*\n      Promise.map(jobList, function (job) {\n        if (job.hasChildren) {\n          job.children = {}\n          return Job.findByQuery({parent: job.id}).then(function (children) {\n            children.forEach(function (child, index, array) {\n              job.children[child.id] = {\n                childNo: child.childNo,\n                status: child.status,\n                result: child.result,\n                allowedToFail: child.allowedToFail,\n                requiredResource: child.requiredResource,\n                updatedAt: child.updatedAt,\n                cmdsEnv: child.triggerInfo.cmdsEnv\n              }\n              job = updateParentJobStatusAndResults(job)\n            })\n            return Promise.resolve(job)\n          }).then(null, function (err) {\n            console.error('failed to find child jobs', err)\n            return Promise.reject(new Error(`failed to find child jobs`))\n          })\n        } else {\n          return Promise.resolve(jobList)\n        }\n      }).then(function (list) {\n        return cb(undefined, list)\n\n      }).then(null, function (err) {\n        console.error('frontendGetByQuery failed to collect child jobs', err)\n        return cb(new Error(`failed to collect child jobs $(err)`))\n      })\n      */\n    }).then(null, function (err) {\n      console.error('frontendGetByQuery findByQuery failed', err)\n      return cb(err)\n    })\n  }\n\n  function queueGet (filter, cb) {\n    var query = {'status': 'received'}\n    find(query, function (err, list) {\n      if (err) {\n        cb(err, undefined)\n        return\n      }\n    })\n\n    if (cb === undefined) {\n      cb = filter\n    } else {\n      query = {'$and': [{requiredResource: filter.requiredResource}, query]}\n    }\n\n    find(query, function (err, list) {\n      if (err) {\n        cb(err, undefined)\n        return\n      }\n\n      if (list.length > 0) {\n        let job = lodash.sortBy(list, (jobItem) => jobItem.receivedAt)[0]\n\n        job.status = 'running'\n        job.runningSince = new Date().getTime()\n        jobUpdate(job, function (err, id) {\n          cb(err, job)\n          return\n        })\n      } else {\n        cb(err, '')\n        return\n      }\n    })\n  }\n\n  function queueInsert (job, cb) {\n    job.status = 'received'\n    job.receivedAt = new Date().getTime()\n    job.updatedAt = new Date().getTime()\n    Job.save(job).then(function (id) {\n      job.id = id\n      updateParentJob(job)\n      cb(undefined, id)\n    }).then(null, function (err) {\n      cb(err, {})\n    })\n  }\n\n  function updateParentJob (job) {\n    if (job.hasOwnProperty('parent')) {\n      if (validator.isUUID(job.parent)) {\n        find({id: job.parent}, function (err, list) {\n          if (err) {\n            console.error('updateParentJob findOne err', err)\n            return\n          }\n          if (list.length > 0) {\n            var parentJob = list[0]\n            var children = {}\n            children[job.id] = {\n              childNo: job.childNo,\n              status: job.status,\n              result: job.result,\n              allowedToFail: job.allowedToFail,\n              requiredResource: job.requiredResource,\n              updatedAt: job.updatedAt,\n              cmdsEnv: job.triggerInfo.cmdsEnv\n            }\n            parentJob.hasChildren = true\n            parentJob.children[job.id] = children[job.id]\n            var oldResult = parentJob.result\n            parentJob = updateParentJobStatusAndResults(parentJob)\n\n            if (oldResult !== parentJob.result) {\n              notifyProvider(parentJob, emitter)\n            }\n\n            if (config.dbType === 'mongodb') {\n              notifyClients(parentJob, client)\n              Job.updateDiff(parentJob.id, {\n                hasChildren: true,\n                status: parentJob.status,\n                result: parentJob.result,\n                children: children\n              })\n            } else {\n              jobUpdate(parentJob, function (err, id) {\n                if (err) {\n                  logger.warn('jobUpdate failed to update parentJob', err)\n                }\n              })\n            }\n          }\n        })\n      }\n    }\n  }\n\n  function updateParentJobStatusAndResults (parentJob) {\n    var parentResult = 'pending'\n    var parentStatus = 'running'\n\n    for (var childId in parentJob.children) {\n      if (parentJob.children.hasOwnProperty(childId)) {\n        var status = parentJob.children[childId].status\n        var result = parentJob.children[childId].result\n        var allowedToFail = parentJob.children[childId].allowedToFail\n        if (result === 'failed' && !(allowedToFail)) parentResult = result // if at least one child job fails the parent job fails\n        if (status === 'aborted') parentStatus = status // if at least one child job was aborted the parent job also counts as aborted\n        if (status === 'running' && parentStatus !== 'aborted') parentStatus = status // if one job is running the parent counts as running\n      }\n    }\n\n    var allChildrenFinished = forEveryKeyInObject(parentJob.children, function (childId) {\n      return parentJob.children[childId].status === 'finished'\n    })\n\n    if (allChildrenFinished) {\n      parentStatus = 'finished'\n    }\n\n    var allChildrenFine = forEveryKeyInObject(parentJob.children, function (childId) {\n      return ((parentJob.children[childId].result === 'success') || parentJob.children[childId].allowedToFail)\n    })\n\n    if (allChildrenFine) {\n      parentResult = 'success'\n    }\n\n    parentJob.status = parentStatus\n    parentJob.result = parentResult\n\n    return parentJob\n  }\n\n  // returns true iff fn(key) returns true for all keys\n  // otherwise false\n  function forEveryKeyInObject (obj, fn) {\n    if (Object.keys(obj).length < 1) {\n      return false\n    }\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        if (!fn(key)) return false\n      }\n    }\n    return true\n  }\n\n  function notifyClients (job, client) {\n    let message = {\n      room: job.id,\n      type: 'job.update',\n      msg: {\n        status: job.status,\n        result: job.result,\n        hasChildren: job.hasChildren,\n        children: job.children\n      }\n    }\n    logger.debug('jobs notifyClients ', message)\n    client.write(message)\n  }\n\n  function notifyProvider (job, emitter) {\n    if (job.trigger === 'github') {\n      let owner = job.triggerInfo.data.branchBase.split('/')[0]\n      let baseRepo = job.triggerInfo.data.branchBase.split('/')[1]\n      let notification = {\n        user: owner,\n        repo: baseRepo,\n        sha: job.triggerInfo.data.sha,\n        state: {\n          status: job.status,\n          result: job.result\n        },\n        target_url: `${config.striderUrl}/projects/${job.project}/jobs/${job.id}`\n      }\n      emitter.emit('github.pr.setStatus', notification, function (err, res) {\n        if (err) logger.warn('notifyProvider setting PR status failed', err)\n        else logger.debug('notifyProvider success', res)\n      })\n    }\n  }\n}\n"]}